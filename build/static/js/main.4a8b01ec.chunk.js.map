{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","handleSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleRemove","name","number","onClick","Persons","persons","map","window","confirm","id","Filter","handleFilterChange","newFilter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","success","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setSuccess","notifcationMessage","setNotificationMessage","useEffect","personService","initialPersons","showNotification","setTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","newPerson","filtered","length","returnedPerson","catch","n","createdPerson","concat","removed","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAkBeA,EAhBI,SAACC,GAAD,OACf,uBAAMC,SAAUD,EAAME,aAAtB,UACI,yCACU,uBAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,sBAGvD,2CACY,uBAAOH,MAAOH,EAAMO,UAAWF,SAAUL,EAAMQ,wBAG3D,8BACA,wBAAQC,KAAK,SAAb,uBCPOC,EAJA,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,aAAV,OACX,8BAAID,EAAOE,KAAX,IAAkBF,EAAOG,OAAzB,IAAiC,wBAAQC,QAASH,EAAjB,wBCiBtBI,EAjBC,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASL,EAAX,EAAWA,aAAX,OACZ,8BACKK,EAAQC,KAAI,SAAAP,GAAM,OACf,cAAC,EAAD,CAEIA,OAAQA,EACRC,aAAc,WACV,GAAGO,OAAOC,QAAP,iBAAyBT,EAAOE,KAAhC,MACC,OACID,EAAaD,EAAOU,MAL3BV,EAAOE,YCCbS,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,mBAAoBC,EAAtB,EAAsBA,UAAtB,OACX,sDACuB,uBAAOrB,MAAOqB,EAAWnB,SAAUkB,Q,gBCHxDE,EAAU,oCAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACT,EAAIU,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBJ,GAAMU,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACT,GAEZ,OADgBK,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BJ,IAC5BO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJ9BK,EAbM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7B,OAAgB,OAAZD,EACK,KAIP,qBAAKE,UAAWD,EAAhB,SACGD,KCgIMG,EAnIH,WAAM,MAEgBC,mBAAS,IAFzB,mBAEPvB,EAFO,KAEEwB,EAFF,OAGkBD,mBAAS,IAH3B,mBAGNpC,EAHM,KAGGsC,EAHH,OAIsBF,mBAAS,IAJ/B,mBAINjC,EAJM,KAIKoC,EAJL,OAKsBH,mBAAS,IAL/B,mBAKNhB,EALM,KAKKoB,EALL,OAMkBJ,mBAAS,WAN3B,mBAMNH,EANM,KAMGQ,EANH,OAOyCL,mBAAS,MAPlD,mBAONM,EAPM,KAOcC,EAPd,KAUdC,qBAAU,WAENC,IAEKrB,MAAK,SAAAsB,GACFT,EAAWS,QAEpB,IAGH,IAsEMC,EAAmB,SAACf,EAASC,GAC/BU,EAAuBX,GACvBS,EAAWR,GACXe,YAAW,WACXL,EAAuB,QACpB,MAGDM,EAAgBpC,EAAQqC,QAAO,SAAA3C,GAAM,OAAIA,EAAOE,KAAK0C,cAAcC,SAAShC,EAAU+B,kBAE5F,OACI,gCACI,2CAEA,cAAC,EAAD,CAAcnB,QAASU,EAAoBT,QAASA,IAEpD,cAAC,EAAD,CACAd,mBAtCmB,SAACkC,GACxBb,EAAaa,EAAMC,OAAOvD,QAsCtBqB,UAAWA,IAGX,2CAEA,cAAC,EAAD,CACAtB,aA9Fa,SAACuD,GAClBA,EAAME,iBAGN,IAAMC,EAAY,CACd/C,KAAMT,EACNU,OAAQP,GAKNsD,EAAW5C,EAAQqC,QAAO,SAAA3C,GAAM,OAAIA,EAAOE,OAAST,KACnC,IAApByD,EAASC,OACL3C,OAAOC,QAAP,UAAkByC,EAAS,GAAGhD,KAA9B,4EACCoC,EACYY,EAAS,GAAGxC,GAAIuC,GACvBhC,MAAK,SAAAmC,GACFtB,EAAWxB,EAAQC,KAAI,SAAAP,GAAM,OAAIA,EAAOU,KAAOwC,EAAS,GAAGxC,GAAKV,EAASoD,MACzErB,EAAW,IACXC,EAAa,IACbQ,EAAiB,kCAAD,OAAmCY,EAAelD,MAAQ,cAE7EmD,OAAM,WACHb,EAAiB,0BAAD,OAA2BU,EAAS,GAAGhD,KAAvC,kCAA6E,SAC7F4B,EAAWxB,EAAQqC,QAAO,SAAAW,GAAC,OAAIA,IAAMJ,EAAS,UAI1DZ,EACYW,GACPhC,MAAK,SAAAsC,GACFzB,EAAWxB,EAAQkD,OAAOD,IAC1BxB,EAAW,IACXC,EAAa,IACbQ,EAAiB,iCAAD,OAAkCe,EAAcrD,MAAQ,eA6DhFP,iBAtDiB,SAACmD,GACtBf,EAAWe,EAAMC,OAAOvD,QAsDpBK,mBAnDmB,SAACiD,GACxBd,EAAac,EAAMC,OAAOvD,QAmDtBC,QAASA,EACTG,UAAWA,IAGX,yCAEA,cAAC,EAAD,CAASU,QAASoC,EAAezC,aAlDpB,SAACS,GAElB4B,EACY5B,GACPO,MAAK,WACF,IAAMwC,EAAUnD,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAEhD,KAAOA,KAC7CoB,EAAWxB,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAEhD,KAAOA,MACxC8B,EAAiB,kCAAD,OAAmCiB,EAAQ,GAAGvD,MAAQ,cAEzEmD,OAAM,WACH,IAAMI,EAAUnD,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAEhD,KAAOA,KAC7C8B,EAAiB,0BAAD,OAA2BiB,EAAQ,GAAGvD,KAAtC,kCAA4E,SAC5F4B,EAAWxB,EAAQqC,QAAO,SAAAW,GAAC,OAAIA,IAAMG,EAAQ,iBCtF7DE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4a8b01ec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n        </div>\r\n\r\n        <div>\r\n            number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n        </div>\r\n\r\n        <div>\r\n        <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Person = ({person, handleRemove}) => (\r\n    <p>{person.name} {person.number} <button onClick={handleRemove}>delete</button></p>\r\n)\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, handleRemove}) => (\r\n    <div>\r\n        {persons.map(person => \r\n            <Person \r\n                key={person.name} \r\n                person={person} \r\n                handleRemove={() => {\r\n                    if(window.confirm(`Delete ${person.name}?`)){\r\n                        return(\r\n                            handleRemove(person.id)\r\n                        )\r\n                    }\r\n                } }\r\n            />)}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({handleFilterChange, newFilter}) => (\r\n    <div>\r\n        filter shown with: <input value={newFilter} onChange={handleFilterChange}/>\r\n    </div>\r\n)\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\nimport '../index.css';\r\n\r\nconst Notification = ({ message, success }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    return (\r\n      <div className={success}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    //State variables\r\n    const [persons, setPersons] = useState([]) \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ success, setSuccess ] = useState('success')\r\n    const [ notifcationMessage, setNotificationMessage ] = useState(null)\r\n\r\n    //run only once after firts render to fetch data from json server\r\n    useEffect(() => {\r\n        //fetch data from json server\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    //Event handlers\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        //Create new person\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        \r\n        //If person is already added -> alert, else add person\r\n        //When alert is raised don't clear fields\r\n        const filtered = persons.filter(person => person.name === newName)\r\n        if(filtered.length !== 0){\r\n            if(window.confirm(`${filtered[0].name} is already added to phonebook, replace the old number with a new one?`)){\r\n                personService\r\n                    .update(filtered[0].id, newPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.id !== filtered[0].id ? person : returnedPerson))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        showNotification(`Updated contact information of ${returnedPerson.name}`, 'success')\r\n                    })\r\n                    .catch(() => {\r\n                        showNotification(`Contact information of ${filtered[0].name} is alredy deleted from server`, 'error')\r\n                        setPersons(persons.filter(n => n !== filtered[0]))\r\n                    })\r\n            }\r\n        }else{\r\n            personService\r\n                .create(newPerson)\r\n                .then(createdPerson => {\r\n                    setPersons(persons.concat(createdPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    showNotification(`Added contact information for ${createdPerson.name}`, 'success')\r\n                })\r\n                        \r\n        }     \r\n    }\r\n\r\n    //Update state variables\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n       \r\n        personService\r\n            .remove(id)\r\n            .then(() => {\r\n                const removed = persons.filter(p => p.id === id)\r\n                setPersons(persons.filter(p => p.id !== id))\r\n                showNotification(`Removed contact information of ${removed[0].name}`, 'success')\r\n            })\r\n            .catch(() => {\r\n                const removed = persons.filter(p => p.id === id)\r\n                showNotification(`Contact information of ${removed[0].name} is alredy deleted from server`, 'error')\r\n                setPersons(persons.filter(n => n !== removed[0]))\r\n            })\r\n        \r\n    }\r\n\r\n    const showNotification = (message, success) =>{\r\n        setNotificationMessage(message)\r\n        setSuccess(success)\r\n        setTimeout(() => {\r\n        setNotificationMessage(null)\r\n        }, 5000)\r\n    }\r\n    //Filter persons\r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n\r\n            <Notification message={notifcationMessage} success={success} />\r\n\r\n            <Filter \r\n            handleFilterChange={handleFilterChange}\r\n            newFilter={newFilter}\r\n            />\r\n            \r\n            <h2>add a new</h2>\r\n            \r\n            <PersonForm \r\n            handleSubmit={handleSubmit}\r\n            handleNameChange={handleNameChange}\r\n            handleNumberChange={handleNumberChange}\r\n            newName={newName}\r\n            newNumber={newNumber}\r\n            />\r\n            \r\n            <h2>Numbers</h2>\r\n\r\n            <Persons persons={personsToShow} handleRemove={handleRemove} />\r\n            \r\n        \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}